# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ICoworkerOnboarding {
  confirmPassword: String!
  firstName: String!
  id: String!
  lastName: String!
  password: String!
}

input ICoworkerRegister {
  email: String!
  firstName: String
  lastName: String
  salesId: String!
}

input IDocument {
  coworkerId: ID
  email: String
  firstName: String
  lastName: String
  name: String!
  rent: IRent
  requires: [String!]!
  salesCoworkerId: ID
  salesId: ID
  securityDeposit: ISecurityDeposit
  type: String!
  url: String!
}

input ILogin {
  email: String!
  password: String!
}

input IRent {
  amount: Float!
  currency: String!
  startDate: String!
}

input ISalesOnboarding {
  company: String!
  confirmPassword: String!
  firstName: String!
  id: String!
  lastName: String!
  password: String!
  phone: String
}

input ISecurityDeposit {
  amount: Float!
  currency: String!
}

type Mutation {
  addDocument(data: IDocument!): ODocument!
  addDocumentType(name: String!): ODocumentType!
  coworkerOnboarding(data: ICoworkerOnboarding!): OUser!
  coworkerRegister(data: ICoworkerRegister!): OUser!
  salesOnboarding(data: ISalesOnboarding!): OUser!
  salesRegister(email: String!): OUser!
  signDocument(id: String!): String!
}

type ODocument {
  id: ID!
  name: String!
  rent: Rent
  requires: [String!]
  salesCoworkerId: ID!
  securityDeposit: SecurityDeposit
  type: String!
  url: String!
}

type ODocumentType {
  id: ID!
  name: String!
  type: String
}

type OUser {
  """Flag that determines if this user account is ready for use."""
  active: Boolean!
  company: String!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  phone: String
  timestamp: String

  """This user's account type. Ex.: A Salesperson's account."""
  type: String!
  walletUrl: String
}

type Query {
  getDocument(id: String!): ODocument!
  getDocumentTypes: [ODocumentType!]!
  getUser(id: String!): OUser!
  login(data: ILogin!): String!
  validateUserWallet(id: String!): WalletAndToken!
}

type Rent {
  amount: Float!
  currency: String!
  startDate: String!
}

type SecurityDeposit {
  amount: Float!
  currency: String!
}

type WalletAndToken {
  token: String!
  validWallet: Boolean!
}
